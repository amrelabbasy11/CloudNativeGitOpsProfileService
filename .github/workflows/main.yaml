name: App Actions CI
on:
  push:
    branches:
     - main 
  pull_request:
    branches:
     - main

env:
  AWS_REGION: us-east-2
  EKS_CLUSTER: eks-cluster

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
     - name: code checkout
       uses: actions/checkout@v5.0.0
      
     # Setup Java FIRST
     - name: Set up JDK 17
       uses: actions/setup-java@v3
       with:
         distribution: 'temurin'
         java-version: '17'
      
     - name: Maven Test
       run: mvn test

     - name: Checkstyle Test
       run: mvn checkstyle:check

     # Setup sonar-scanner
     - name: Setup Sonar Scanner
       uses: warchant/setup-sonar-scanner@v7

     # Run sonar-scanner
     - name: SonarCloud Scan
       run: |
         sonar-scanner \
           -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
           -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
           -Dsonar.host.url=${{ secrets.SONAR_URL }} \
           -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
           -Dsonar.sources=src \
           -Dsonar.junit.reportPaths=target/surefire-reports \
           -Dsonar.jacoco.reportPaths=target/jacoco.exec \
           -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml \
           -Dsonar.java.binaries=target/classes
         
     # Check Quality Gate status
     - name: SonarCloud Quality Gate check
       id: sonar-quality-gate
       uses: sonarsource/sonarqube-quality-gate-action@master
       timeout-minutes: 5
       env:
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
         SONAR_HOST_URL: ${{ secrets.SONAR_URL }}

  BUILD_AND_PUBLISH:
    runs-on: ubuntu-latest
    needs: Testing
    steps: 
     - name: code checkout
       uses: actions/checkout@v5.0.0

     # Build and Push APP Image
     - name: Build and Push APP Image
       uses: appleboy/docker-ecr-action@master
       with:
          access_key: ${{ secrets.aws_access_key_id }}
          secret_key: ${{ secrets.aws_secret_access_key }}
          registry: ${{ secrets.registry }}
          repo: vprofile-app
          region: ${{ env.AWS_REGION }}
          tags: latest
          dockerfile: ./Docker-app/Dockerfile
          context: .

     # Build and Push DB Image
     - name: Build and Push DB Image
       uses: appleboy/docker-ecr-action@master
       with:
          access_key: ${{ secrets.aws_access_key_id }}
          secret_key: ${{ secrets.aws_secret_access_key }}
          registry: ${{ secrets.registry }}
          repo: vprofile-db
          region: ${{ env.AWS_REGION }}
          tags: latest
          dockerfile: ./Docker-db/Dockerfile
          context: .

     # Build and Push WEB Image
     - name: Build and Push WEB Image
       uses: appleboy/docker-ecr-action@master
       with:
          access_key: ${{ secrets.aws_access_key_id }}
          secret_key: ${{ secrets.aws_secret_access_key }}
          registry: ${{ secrets.registry }}
          repo: vprofile-web
          region: ${{ env.AWS_REGION }}
          tags: latest
          dockerfile: ./Docker-web/Dockerfile
          context: .

##